defaults: &defaults
  working_directory: /circleci
  docker:
    - image: docker:17.06.0-ce-git

version: 2

jobs:
  01_build_image:
    <<: *defaults

    steps:
      - setup_remote_docker:
          reusable: true

      - checkout

      - run:
          name: Build Docker image
          command: |
            set -ex
            docker build -t $(./image) .

      - run:
          name: Save Docker image
          command: |
            set -ex
            docker save $(./image) --output workspace/${CIRCLE_SHA1}.tar

      - persist_to_workspace:
          root: workspace
          paths:
            - '*.tar'

  02_test_image:
    <<: *defaults

    steps:
      - attach_workspace:
        at: workspace

      - setup_remote_docker:
          reusable: true

      - run: &import_image
          name: Import Docker image
          command: |
            set -ex
            docker load --input workspace/${CIRCLE_SHA1}.tar

      - run:
          name: Check if dependecies are installed
          command: |
            set -ex
            export image=$(./image)
            docker run $image bash -c 'which aws'
            docker run $image bash -c 'which ci'
            docker run $image bash -c 'which clean_up_reusable_docker'
            docker run $image bash -c 'which docker'
            docker run $image bash -c 'which docker-compose'
            docker run $image bash -c 'which ensure_head'
            docker run $image bash -c 'which heroku'
            docker run $image bash -c 'which push_image_to_ecr'
            docker run $image bash -c 'which push_to_heroku'
            docker run $image bash -c 'which python'
            docker run $image bash -c 'which wfi'

  03_push_image:
    <<: *defaults

    steps:
      - attach_workspace:
        at: workspace

      - setup_remote_docker:
          reusable: true

      - run:
          <<: *import_image

      - run:
          name: Log in to Docker repository
          command: docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}

      - run:
          name: Push the image
          command: docker push $(./image)

workflows:
  version: 2
  test:
    jobs:
      - 01_build_image
      - 02_test_image:
          requires:
            - 01_build_image
      - 03_push_image:
          requires:
            - 02_test_image
          filters:
            branches:
              only:
                - master
